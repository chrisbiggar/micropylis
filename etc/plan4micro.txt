commit:
v3
-----
innumerous changes.
cleaned up build and renamed to gengraphics
impl full tool menu using texturegrid for icons.
fixed opengl scaling of tiles by adding 1px border around all tiles in tilesheet. added tools logic to compensate for scaling. fixed opengl scaling to zoom to centre of view.
fire terrainbehaviour implemented. animation. 


----- STATE OF DEV -----


- speed control

- impl speed control and use dt to control how fast things update! animation may have to be slowed down sometimes etc.
    - compare to original / look at original timing.

- simulation engine *****
    - jot down notes about simulation as you go.
    - start with power stuff?  ***
        - blink
            - overlay?
        - building tool
        - laywire
        - look at algorithm

-------------   Plan For Micropylis Dev --------------

- updateView() for updating only the tiles seen on the screen; will be called when scrolling. on_map changed only updates tiles within screen. call less periodically when zoomed out?


- work on engine simulation
    - continue working on behaviours
    - tools
    - animation
        - use pyglet animations when an animated tile is set?
        - blink
        - shake
        - on power animations
        - only animate within viewport
            - impl viewingpane withinView(tileX,tileY)
                - getViewCityRect() *

- gui
    -make concrete plan for gui.
        - scenes and controls
        - complete gui mockups for all controls and screens
 
    - message display box
        - better background (image?)(like kytten and cursor)
        - needs to auto resize itself
            - stay same width?
            - need to figure this out.

    - info panel.
        - resize itself.
        - buttons for kytten dialogs
        - can be minimized?
        - minimap is 360 px wide
            - scale the regular map very small?
            - how to do minimap and overlays?

    - sounds

    - other things
        - new city
        - pause/play
        - save/load
        - budget dialog
        - city eval

- learn how to do profiling
- consider unit tests

- loading screen (getting tiles ready)
    - will display game screen with display panel and in area where map will
        be it will display a loading bar
    - have lightweight scene manager
        - either (can create a "process" and add draw and update functions to it)
        - or (scene manager where a scene object will subclass Scene)
        - viewingpane will only process a certain amount at a time, and report back its completion and progres
            - this scene will update a progress bar and display an animation.


-----------  BUGS  -----------

1: PaletteMenu or Option does not pass mouse move event to parent dialog (should probobly do this)

4: when tool is dragged off map, tool does not actually place.
    - has to do with "on tool up" not happening

5: when placing or dragging a tool higher than or left of the map, the tool will draw outside the map and wrap around to other side of map, setting the tiles in those spots to black, and the spot outside the map to the value of those tiles. (tile sprite coords are being moved to values outside of the map)

----------------  Extraneous Things --------------

- make window resizable (easy!)
    - do in test program first
    - everything relative to its size
    - gui components resize themselves.
    - 0ther glitches?
    - minimum size restriction
    - fullscreen?


- ? make right click drag move map. right click without drag queries tile.

- add title label at top of message queue: City Info
- put dollar sign in front of tool cost

- change the mouse cursor to CURSOR_NO if tool cannot be dragged there.

- get self containing exe working

- get music from original.

- improve tiles!

- tool cursor in viewingpane
    - tool cursor uses sprite (will need peices for middles and ends, vertical and horizontal + sizes) (or look at how kytten makes dynamic boxes using single image**)

- build maker
    - install tool (start menu shortcut)
    - copies everything for a release to a release directory
        - this needs testing!
        - python code into a self contained executable
    - uses a simple build script
        - directories, files, other scripts to run (maketiles)
        - excluded extensions
    - pack all tile data including tiles.rc in single file
        - header, tiles.rc, and tilesheet pngs
        - header data: signature, format version, number of sizes followed by each size's number, length of tiles.rc
        - implement for icons and sprite images

*- placing zones should be restricted to 2 zones thick either direction
    - impl. in getBounds(): similar to roadliketool

- could allow to scroll outside map partially with illusion of map continuing in all directions. could have same colour or repeated tiles outside border of map.

-----------  NOTES  -----------

Mouse Coords:
PS:192,288
RES:256,96
PARK:32,288
RAIL:288,226

- kytten container that has no background and/or cannot be moved
        - try generic container?

- Micropolis is simple!
    - just does simulation (mapscanning and census) in the switch-case of the simulate() function. then stuff is added to map with tool classes. sprites are animated.
    - class functionailities can be split into:
        - Mapscanning
            - TileBehaviour,
            - mapscanner
            - terrainbehaviour
            - things that help with this
                - TrafficGen
                - tiles, tilespec
        - Evaluation and Census
            - Cityeval
            - citybudget
            - cityproblem
        - tools for modiying the map
            - start with tool
            - RoadLikeTool
            - bulldozer
            - translatedtooleffect
        - Sprites
            - airplane, monster, tornado

- a very dense large city would cause slowdowns due to updating the batch
    - will need to mess with updating of changed tiles.
    - for more effiency: keep track of which tiles that are in view and only actively update those
        - will need to update tiles after scrolling or window size change
    - window size might need to be limited (too many tiles will need constant updating in a large city)

- Toolstrokes always draw downwards. so when draging tool down, y[start] always stays the same and height increases. when dragging up y increases as well as height. start is always at top of line.

---------- Q 'n A -----------

- how does it determine which zones are linked together (for transportation and power etc.)
    - in behaviour class it follows road from zone to see if it can get somewhere usefull

---------- GOALS -----------

One of the main goals of porting micropolis is to 
understand a semi-complex simulation system:
    - city transportation network
    - rci demand